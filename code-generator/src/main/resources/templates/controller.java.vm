package ${package.Controller};

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
    #if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Api(value = "$!{table.comment}", tags = { "$!{table.comment}" })
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    ${table.serviceName} ${table.entityPath}Service;

    @ApiOperation(value = "添加/修改(需要传对应id)", notes = "")
    @GetMapping("/save")
    public Result save(@ModelAttribute ${entity} entity){

        ${table.entityPath}Service.saveOrUpdate(entity);

        return Result.success();
    }

    @ApiOperation(value = "删除", notes = "")
    @GetMapping(value = "/delete/{id}")
    public Result delete(@PathVariable String id) {

        ${table.entityPath}Service.removeById(id);

        return Result.success();
    }

    @ApiOperation(value = "根据id查询", notes = "")
    @GetMapping(value = "/findById/{id}")
    public Result findById(@PathVariable("id") String id) {

        ${entity} entity = ${table.entityPath}Service.getById(id);
        return Result.success(entity);
    }

    @ApiOperation(value = "分页查询", notes = "")
    @GetMapping(value = "/pageQuery")
    public Result pageQuery(
            @RequestParam(defaultValue = "1") Integer pageNo,
            @RequestParam(defaultValue = "10") Integer pageSize,
            @ModelAttribute ${entity} queryModel) {
        Page<${entity}> page = ${table.entityPath}Service.pageQuery(pageNo, pageSize, queryModel);
        return Result.success(page);
    }

    @ApiOperation(value = "列表查询", notes = "")
    @GetMapping(value = "/findList")
    public Result findList(@ModelAttribute ${entity} queryModel) {

        List<${entity}> list = ${table.entityPath}Service.findList(queryModel);

        return Result.success(list);
    }

}
#end
